<RemoteDir>
    orientation: 'vertical'
    bcolor: app.active_window_color
    canvas.before:
        Color:
            rgba: self.bcolor
        Rectangle:
            pos: self.pos
            size: self.size

    RelativeLayout:
        size_hint_y: None
        height: 50

        BoxLayout:
            padding: (1, 0, 0, 1)
            pos_hint: {'center_y': .5}
            size_hint_y: None
            height: 26
            spacing: 1

            BulbImage:
                source: app.img_path('go_back.png')
                mouse_locked: root.mouse_locked
                on_touch_up:
                    if self.collide_point(*args[1].pos) :\
                    root.go_back()
            BulbImage:
                source: app.img_path('go_forward.png')
                mouse_locked: root.mouse_locked
                on_touch_up:
                    if self.collide_point(*args[1].pos) :\
                    root.go_forward()
            BulbImage:
                source: app.img_path('arrow_up.png')
                mouse_locked: root.mouse_locked
                on_touch_up:
                    if self.collide_point(*args[1].pos) :\
                    root.go_up()


            TextInput:
                id: current_path
                size_hint_x: 1
                multiline: False
                on_text_validate: root.chdir_from_input(self.text)
                on_focus:
                    if self.focus:\
                    root.unfocus_all()
                    root.mouse_locked = True
                on_focus:
                    if not self.focus:\
                    root.mouse_locked = False
            BulbImage:
                source: app.img_path('arrow_down.png')
                mouse_locked: root.mouse_locked
                on_touch_up:
                    if self.collide_point(*args[1].pos) :\
                    root.show_history(current_path)

            TextInput:
                id: search
                width: 140
                multiline: False
                hint_text: 'Search:'
                on_text_validate: root.search(self.text)
                on_focus:
                    if self.focus:\
                    root.unfocus_all()
                    root.mouse_locked = True
                on_focus:
                    if not self.focus:\
                    root.mouse_locked = False

            BulbImage:
                id: settings
                mouse_locked: root.mouse_locked
                source: app.img_path('settings.png')
                on_touch_up:
                    if self.collide_point(*args[1].pos) :\
                    root.settings()

    BoxLayout:
        size_hint_y: None
        height: 28
        padding: (1 ,0 ,1 ,2)
        BoxLayout
        BoxLayout:
            size_hint_x: None
            width: 92
            spacing: 1

            BulbImage:
                id: view_menu
                source: app.img_path('file_view.png')
                mouse_locked: root.mouse_locked
                on_touch_up:
                    if self.collide_point(*args[1].pos) :\
                    root.view_menu()

            BulbImage:
                id: sort_menu
                mouse_locked: root.mouse_locked
                source: app.img_path('sort.png')
                on_touch_up:
                    if self.collide_point(*args[1].pos) :\
                    root.sort_menu()
            BoxLayout:
                orientation: 'vertical'
                size_hint: None, None
                size: 12, 26
                spacing: 2
                BulbImage:
                    id: sort_files_up
                    size: 12, 12
                    source: app.img_path('arrow_up.png')
                    mouse_locked: root.mouse_locked
                    on_touch_up:
                        if self.collide_point(*args[1].pos) :\
                        root.sort_files(reverse=False)
                BulbImage:
                    id: sort_files_down
                    size: 12, 12
                    source: app.img_path('arrow_down.png')
                    mouse_locked: root.mouse_locked
                    on_touch_up:
                        if self.collide_point(*args[1].pos) :\
                        root.sort_files(reverse=True)

            BulbImage:
                id: file_size
                source: app.img_path('size.png')
                on_touch_up:
                    if self.collide_point(*args[1].pos) :\
                    root.file_size()


    RelativeLayout:

        ScrollView:
            id: space_scroller
            size_hint: (1, 1)
            bar_width: 10
            bar_color: app.bar_color
            bar_inactive_color: self.bar_color
            effect_cls: "ScrollEffect"
            scroll_type: ['bars']
            canvas.before:
                Color:
                    rgba: app.unactive_window_color
                Rectangle:
                    pos: self.pos
                    size: self.size

            FilesSpace:
                id: files_space
                originator: root
                pos_hint: {'top': (root.height)/root.height, 'left': 0}
                size_hint_x: 1 - space_scroller.bar_width/space_scroller.width if self.height > space_scroller.height else 1
                size_hint_y:None
                height: max(self.minimum_height, space_scroller.height)


    RelativeLayout:
        size_hint_y: progress_box.height/root.height
        canvas.before:
            Color:
                rgba: app.main_bcolor
            Rectangle:
                pos: self.pos
                size: self.size

        ProgressBox:
            originator: root
            pos_hint: {'center_x': .5}
            id: progress_box
            size_hint: .7, None
            canvas.before:
                Color:
                    rgba: root.bcolor
                Rectangle:
                    pos: self.pos
                    size: self.size
